// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`processChatResponse > scenario: delayed message annotations in onFinish > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "text",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: delayed message annotations in onFinish > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "annotations": [
        {
          "example": "annotation",
        },
      ],
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "id-0",
      "parts": [
        {
          "text": "text",
          "type": "text",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 5,
      "outputTokens": 10,
      "totalTokens": 15,
    },
  },
]
`;

exports[`processChatResponse > scenario: delayed message annotations in onFinish > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: message annotations in onChunk > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "t1",
        "type": "text",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "t2",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: message annotations in onChunk > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "annotations": [
        "annotation1",
        "annotation2",
      ],
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "id-0",
      "parts": [
        {
          "text": "t1t2",
          "type": "text",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 5,
      "outputTokens": 10,
      "totalTokens": 15,
    },
  },
]
`;

exports[`processChatResponse > scenario: message annotations in onChunk > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: message annotations with existing assistant last message > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "t1",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: message annotations with existing assistant last message > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "annotations": [
        "annotation0",
        "annotation1",
      ],
      "createdAt": 2023-01-02T00:00:00.000Z,
      "id": "original-id",
      "parts": [
        {
          "text": "t1",
          "type": "text",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 5,
      "outputTokens": 10,
      "totalTokens": 15,
    },
  },
]
`;

exports[`processChatResponse > scenario: message annotations with existing assistant last message > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: onToolCall is executed > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "args": {
            "city": "London",
          },
          "state": "call",
          "toolCallId": "tool-call-id",
          "toolName": "tool-name",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "args": {
            "city": "London",
          },
          "result": "test-result",
          "state": "result",
          "toolCallId": "tool-call-id",
          "toolName": "tool-name",
        },
        "type": "tool-invocation",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: onToolCall is executed > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "id-0",
      "parts": [
        {
          "toolInvocation": {
            "args": {
              "city": "London",
            },
            "result": "test-result",
            "state": "result",
            "step": 0,
            "toolCallId": "tool-call-id",
            "toolName": "tool-name",
          },
          "type": "tool-invocation",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 5,
      "outputTokens": 10,
      "totalTokens": 15,
    },
  },
]
`;

exports[`processChatResponse > scenario: onToolCall is executed > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: server provides file parts > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "Here is a file:",
        "type": "text",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "mediaType": "text/plain",
        "type": "file",
        "url": "data:text/plain;base64,SGVsbG8gV29ybGQ=",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "And another one:",
        "type": "text",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "mediaType": "application/json",
        "type": "file",
        "url": "data:application/json;base64,eyJrZXkiOiJ2YWx1ZSJ9",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: server provides file parts > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "id-0",
      "parts": [
        {
          "text": "Here is a file:And another one:",
          "type": "text",
        },
        {
          "mediaType": "text/plain",
          "type": "file",
          "url": "data:text/plain;base64,SGVsbG8gV29ybGQ=",
        },
        {
          "mediaType": "application/json",
          "type": "file",
          "url": "data:application/json;base64,eyJrZXkiOiJ2YWx1ZSJ9",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 5,
      "outputTokens": 10,
      "totalTokens": 15,
    },
  },
]
`;

exports[`processChatResponse > scenario: server provides file parts > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: server provides message ids > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "messageId": "step_123",
      "partDelta": {
        "type": "step-start",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "Hello, ",
        "type": "text",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "world!",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: server provides message ids > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "step_123",
      "parts": [
        {
          "type": "step-start",
        },
        {
          "text": "Hello, world!",
          "type": "text",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 5,
      "outputTokens": 10,
      "totalTokens": 15,
    },
  },
]
`;

exports[`processChatResponse > scenario: server provides message ids > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: server provides reasoning > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "messageId": "step_123",
      "partDelta": {
        "type": "step-start",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": undefined,
        "text": "I will open the conversation",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": {
          "testProvider": {
            "signature": "1234567890",
          },
        },
        "text": " with witty banter. ",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": {
          "testProvider": {
            "isRedacted": true,
          },
        },
        "text": "redacted-data",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": undefined,
        "text": "Once the user has relaxed,",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": {
          "testProvider": {
            "signature": "abc123",
          },
        },
        "text": " I will pry for valuable information.",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": undefined,
        "text": "",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "Hi there!",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: server provides reasoning > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "step_123",
      "parts": [
        {
          "type": "step-start",
        },
        {
          "providerMetadata": {
            "testProvider": {
              "signature": "abc123",
            },
          },
          "text": "I will open the conversation with witty banter. redacted-dataOnce the user has relaxed, I will pry for valuable information.",
          "type": "reasoning",
        },
        {
          "text": "Hi there!",
          "type": "text",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 5,
      "outputTokens": 10,
      "totalTokens": 15,
    },
  },
]
`;

exports[`processChatResponse > scenario: server provides reasoning > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: server provides sources > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "The weather in London is sunny.",
        "type": "text",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "source": {
          "id": "source-id",
          "sourceType": "url",
          "title": "Example",
          "type": "source",
          "url": "https://example.com",
        },
        "type": "source",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: server provides sources > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "id-0",
      "parts": [
        {
          "text": "The weather in London is sunny.",
          "type": "text",
        },
        {
          "source": {
            "id": "source-id",
            "sourceType": "url",
            "title": "Example",
            "type": "source",
            "url": "https://example.com",
          },
          "type": "source",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 7,
      "outputTokens": 14,
      "totalTokens": 21,
    },
  },
]
`;

exports[`processChatResponse > scenario: server provides sources > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: server-side continue roundtrip > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "The weather in London ",
        "type": "text",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "is sunny.",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: server-side tool roundtrip > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "args": {
            "city": "London",
          },
          "state": "call",
          "toolCallId": "tool-call-id",
          "toolName": "tool-name",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "result": {
            "weather": "sunny",
          },
          "state": "result",
          "toolCallId": "tool-call-id",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "The weather in London is sunny.",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: server-side tool roundtrip > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "id-0",
      "parts": [
        {
          "toolInvocation": {
            "args": {
              "city": "London",
            },
            "result": {
              "weather": "sunny",
            },
            "state": "result",
            "step": 0,
            "toolCallId": "tool-call-id",
            "toolName": "tool-name",
          },
          "type": "tool-invocation",
        },
        {
          "text": "The weather in London is sunny.",
          "type": "text",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 7,
      "outputTokens": 14,
      "totalTokens": 21,
    },
  },
]
`;

exports[`processChatResponse > scenario: server-side tool roundtrip > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: server-side tool roundtrip with existing assistant message > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "messageId": undefined,
      "partDelta": {
        "type": "step-start",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "args": {
            "city": "London",
          },
          "state": "call",
          "toolCallId": "tool-call-id",
          "toolName": "tool-name",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "result": {
            "weather": "sunny",
          },
          "state": "result",
          "toolCallId": "tool-call-id",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "The weather in London is sunny.",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: server-side tool roundtrip with existing assistant message > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2023-01-02T00:00:00.000Z,
      "id": "original-id",
      "parts": [
        {
          "toolInvocation": {
            "args": {},
            "result": {
              "location": "Berlin",
            },
            "state": "result",
            "step": 0,
            "toolCallId": "tool-call-id-original",
            "toolName": "tool-name-original",
          },
          "type": "tool-invocation",
        },
        {
          "type": "step-start",
        },
        {
          "toolInvocation": {
            "args": {
              "city": "London",
            },
            "result": {
              "weather": "sunny",
            },
            "state": "result",
            "step": 1,
            "toolCallId": "tool-call-id",
            "toolName": "tool-name",
          },
          "type": "tool-invocation",
        },
        {
          "text": "The weather in London is sunny.",
          "type": "text",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 7,
      "outputTokens": 14,
      "totalTokens": 21,
    },
  },
]
`;

exports[`processChatResponse > scenario: server-side tool roundtrip with existing assistant message > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: server-side tool roundtrip with multiple assistant reasoning > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": undefined,
        "text": "I will ",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": {
          "testProvider": {
            "signature": "1234567890",
          },
        },
        "text": "use a tool to get the weather in London.",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": undefined,
        "text": "",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "args": {
            "city": "London",
          },
          "state": "call",
          "toolCallId": "tool-call-id",
          "toolName": "tool-name",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "result": {
            "weather": "sunny",
          },
          "state": "result",
          "toolCallId": "tool-call-id",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": {
          "testProvider": {
            "signature": "abc123",
          },
        },
        "text": "I know know the weather in London.",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "providerMetadata": undefined,
        "text": "",
        "type": "reasoning",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "The weather in London is sunny.",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: server-side tool roundtrip with multiple assistant reasoning > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "id-0",
      "parts": [
        {
          "providerMetadata": {
            "testProvider": {
              "signature": "1234567890",
            },
          },
          "text": "I will use a tool to get the weather in London.",
          "type": "reasoning",
        },
        {
          "toolInvocation": {
            "args": {
              "city": "London",
            },
            "result": {
              "weather": "sunny",
            },
            "state": "result",
            "step": 0,
            "toolCallId": "tool-call-id",
            "toolName": "tool-name",
          },
          "type": "tool-invocation",
        },
        {
          "providerMetadata": {
            "testProvider": {
              "signature": "abc123",
            },
          },
          "text": "I know know the weather in London.",
          "type": "reasoning",
        },
        {
          "text": "The weather in London is sunny.",
          "type": "text",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 7,
      "outputTokens": 14,
      "totalTokens": 21,
    },
  },
]
`;

exports[`processChatResponse > scenario: server-side tool roundtrip with multiple assistant reasoning > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: server-side tool roundtrip with multiple assistant texts > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "I will ",
        "type": "text",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "use a tool to get the weather in London.",
        "type": "text",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "args": {
            "city": "London",
          },
          "state": "call",
          "toolCallId": "tool-call-id",
          "toolName": "tool-name",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "result": {
            "weather": "sunny",
          },
          "state": "result",
          "toolCallId": "tool-call-id",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "The weather in London ",
        "type": "text",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "is sunny.",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: server-side tool roundtrip with multiple assistant texts > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "id-0",
      "parts": [
        {
          "text": "I will use a tool to get the weather in London.",
          "type": "text",
        },
        {
          "toolInvocation": {
            "args": {
              "city": "London",
            },
            "result": {
              "weather": "sunny",
            },
            "state": "result",
            "step": 0,
            "toolCallId": "tool-call-id",
            "toolName": "tool-name",
          },
          "type": "tool-invocation",
        },
        {
          "text": "The weather in London is sunny.",
          "type": "text",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 7,
      "outputTokens": 14,
      "totalTokens": 21,
    },
  },
]
`;

exports[`processChatResponse > scenario: server-side tool roundtrip with multiple assistant texts > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: simple text response > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "Hello, ",
        "type": "text",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "text": "world!",
        "type": "text",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: simple text response > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "id-0",
      "parts": [
        {
          "text": "Hello, world!",
          "type": "text",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 5,
      "outputTokens": 10,
      "totalTokens": 15,
    },
  },
]
`;

exports[`processChatResponse > scenario: simple text response > should call the updateData function with the correct arguments 1`] = `[]`;

exports[`processChatResponse > scenario: tool call streaming > should call the addOrUpdateAssistantMessageParts function with the correct arguments 1`] = `
[
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "args": undefined,
          "state": "partial-call",
          "toolCallId": "tool-call-0",
          "toolName": "test-tool",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "args": "{"testArg":"t",
          "state": "partial-call",
          "toolCallId": "tool-call-0",
          "toolName": "",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "args": "est-value"}}",
          "state": "partial-call",
          "toolCallId": "tool-call-0",
          "toolName": "",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "args": {
            "testArg": "test-value",
          },
          "state": "call",
          "toolCallId": "tool-call-0",
          "toolName": "test-tool",
        },
        "type": "tool-invocation",
      },
    },
  ],
  [
    {
      "chatId": "chat-id",
      "generateId": [Function],
      "partDelta": {
        "toolInvocation": {
          "result": "test-result",
          "state": "result",
          "toolCallId": "tool-call-0",
        },
        "type": "tool-invocation",
      },
    },
  ],
]
`;

exports[`processChatResponse > scenario: tool call streaming > should call the onFinish function with the correct arguments 1`] = `
[
  {
    "finishReason": "stop",
    "message": {
      "createdAt": 2025-01-01T00:00:00.000Z,
      "id": "id-0",
      "parts": [
        {
          "toolInvocation": {
            "args": {
              "testArg": "test-value",
            },
            "result": "test-result",
            "state": "result",
            "step": 0,
            "toolCallId": "tool-call-0",
            "toolName": "test-tool",
          },
          "type": "tool-invocation",
        },
      ],
      "role": "assistant",
    },
    "usage": {
      "inputTokens": 5,
      "outputTokens": 10,
      "totalTokens": 15,
    },
  },
]
`;

exports[`processChatResponse > scenario: tool call streaming > should call the updateData function with the correct arguments 1`] = `[]`;
